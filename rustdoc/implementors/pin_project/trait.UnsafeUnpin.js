(function() {var implementors = {};
implementors["futures_util"] = [{"text":"impl&lt;Fut&gt; UnsafeUnpin for Fuse&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F&gt; UnsafeUnpin for Flatten&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Future,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;F&gt; UnsafeUnpin for FlattenStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Future,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Fut, F&gt; UnsafeUnpin for Map&lt;Fut, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F&gt; UnsafeUnpin for IntoStream&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut, T&gt; UnsafeUnpin for MapInto&lt;Fut, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; UnsafeUnpin for Then&lt;Fut1, Fut2, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut, F&gt; UnsafeUnpin for Inspect&lt;Fut, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut&gt; UnsafeUnpin for NeverError&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut&gt; UnsafeUnpin for UnitError&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut&gt; UnsafeUnpin for CatchUnwind&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut:&nbsp;Future&gt; UnsafeUnpin for Remote&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut&gt; UnsafeUnpin for IntoFuture&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut1, Fut2&gt; UnsafeUnpin for TryFlatten&lt;Fut1, Fut2&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut&gt; UnsafeUnpin for TryFlattenStream&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: TryFuture,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Fut, Si&gt; UnsafeUnpin for FlattenSink&lt;Fut, Si&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; UnsafeUnpin for AndThen&lt;Fut1, Fut2, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut1, Fut2, F&gt; UnsafeUnpin for OrElse&lt;Fut1, Fut2, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut, E&gt; UnsafeUnpin for ErrInto&lt;Fut, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut, E&gt; UnsafeUnpin for OkInto&lt;Fut, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut, F&gt; UnsafeUnpin for InspectOk&lt;Fut, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut, F&gt; UnsafeUnpin for InspectErr&lt;Fut, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut, F&gt; UnsafeUnpin for MapOk&lt;Fut, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut, F&gt; UnsafeUnpin for MapErr&lt;Fut, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut, F, G&gt; UnsafeUnpin for MapOkOrElse&lt;Fut, F, G&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut, F&gt; UnsafeUnpin for UnwrapOrElse&lt;Fut, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut:&nbsp;Future&gt; UnsafeUnpin for MaybeDone&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut:&nbsp;TryFuture&gt; UnsafeUnpin for TryMaybeDone&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F&gt; UnsafeUnpin for OptionFuture&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut1:&nbsp;Future, Fut2:&nbsp;Future&gt; UnsafeUnpin for Join&lt;Fut1, Fut2&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut1:&nbsp;Future, Fut2:&nbsp;Future, Fut3:&nbsp;Future&gt; UnsafeUnpin for Join3&lt;Fut1, Fut2, Fut3&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut1:&nbsp;Future, Fut2:&nbsp;Future, Fut3:&nbsp;Future, Fut4:&nbsp;Future&gt; UnsafeUnpin for Join4&lt;Fut1, Fut2, Fut3, Fut4&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut1:&nbsp;Future, Fut2:&nbsp;Future, Fut3:&nbsp;Future, Fut4:&nbsp;Future, Fut5:&nbsp;Future&gt; UnsafeUnpin for Join5&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut1:&nbsp;TryFuture, Fut2:&nbsp;TryFuture&gt; UnsafeUnpin for TryJoin&lt;Fut1, Fut2&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut1:&nbsp;TryFuture, Fut2:&nbsp;TryFuture, Fut3:&nbsp;TryFuture&gt; UnsafeUnpin for TryJoin3&lt;Fut1, Fut2, Fut3&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut1:&nbsp;TryFuture, Fut2:&nbsp;TryFuture, Fut3:&nbsp;TryFuture, Fut4:&nbsp;TryFuture&gt; UnsafeUnpin for TryJoin4&lt;Fut1, Fut2, Fut3, Fut4&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut1:&nbsp;TryFuture, Fut2:&nbsp;TryFuture, Fut3:&nbsp;TryFuture, Fut4:&nbsp;TryFuture, Fut5:&nbsp;TryFuture&gt; UnsafeUnpin for TryJoin5&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A, B&gt; UnsafeUnpin for Either&lt;A, B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut&gt; UnsafeUnpin for Abortable&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St1, St2&gt; UnsafeUnpin for Chain&lt;St1, St2&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St, C&gt; UnsafeUnpin for Collect&lt;St, C&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St:&nbsp;Stream&gt; UnsafeUnpin for Concat&lt;St&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St&gt; UnsafeUnpin for Enumerate&lt;St&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnsafeUnpin for Filter&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Stream,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnsafeUnpin for FilterMap&lt;St, Fut, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St&gt; UnsafeUnpin for Flatten&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Stream,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;St, Fut, T, F&gt; UnsafeUnpin for Fold&lt;St, Fut, T, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St, Si&gt; UnsafeUnpin for Forward&lt;St, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: TryStream,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnsafeUnpin for ForEach&lt;St, Fut, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St&gt; UnsafeUnpin for Fuse&lt;St&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St, F&gt; UnsafeUnpin for Inspect&lt;St, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St, F&gt; UnsafeUnpin for Map&lt;St, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St, U, F&gt; UnsafeUnpin for FlatMap&lt;St, U, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St:&nbsp;Stream&gt; UnsafeUnpin for Peekable&lt;St&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, St:&nbsp;Stream&gt; UnsafeUnpin for Peek&lt;'a, St&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St&gt; UnsafeUnpin for Skip&lt;St&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnsafeUnpin for SkipWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Stream,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;St&gt; UnsafeUnpin for Take&lt;St&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St:&nbsp;Stream, Fut, F&gt; UnsafeUnpin for TakeWhile&lt;St, Fut, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St:&nbsp;Stream, Fut:&nbsp;Future&gt; UnsafeUnpin for TakeUntil&lt;St, Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnsafeUnpin for Then&lt;St, Fut, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St1:&nbsp;Stream, St2:&nbsp;Stream&gt; UnsafeUnpin for Zip&lt;St1, St2&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St:&nbsp;Stream&gt; UnsafeUnpin for Chunks&lt;St&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St:&nbsp;Stream&gt; UnsafeUnpin for ReadyChunks&lt;St&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St:&nbsp;Stream, S, Fut, F&gt; UnsafeUnpin for Scan&lt;St, S, Fut, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St&gt; UnsafeUnpin for BufferUnordered&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Stream,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;St&gt; UnsafeUnpin for Buffered&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Stream,<br>&nbsp;&nbsp;&nbsp;&nbsp;St::Item: Future,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnsafeUnpin for ForEachConcurrent&lt;St, Fut, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St&gt; UnsafeUnpin for CatchUnwind&lt;St&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnsafeUnpin for AndThen&lt;St, Fut, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St, E&gt; UnsafeUnpin for ErrInto&lt;St, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St, F&gt; UnsafeUnpin for InspectOk&lt;St, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St, F&gt; UnsafeUnpin for InspectErr&lt;St, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St&gt; UnsafeUnpin for IntoStream&lt;St&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St, F&gt; UnsafeUnpin for MapOk&lt;St, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St, F&gt; UnsafeUnpin for MapErr&lt;St, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnsafeUnpin for OrElse&lt;St, Fut, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnsafeUnpin for TryForEach&lt;St, Fut, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnsafeUnpin for TryFilter&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: TryStream,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnsafeUnpin for TryFilterMap&lt;St, Fut, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St&gt; UnsafeUnpin for TryFlatten&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: TryStream,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;St, C&gt; UnsafeUnpin for TryCollect&lt;St, C&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St:&nbsp;TryStream&gt; UnsafeUnpin for TryConcat&lt;St&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St, Fut, T, F&gt; UnsafeUnpin for TryFold&lt;St, Fut, T, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, F, Fut&gt; UnsafeUnpin for TryUnfold&lt;T, F, Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnsafeUnpin for TrySkipWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: TryStream,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;St&gt; UnsafeUnpin for TryBufferUnordered&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: TryStream,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;St, Fut, F&gt; UnsafeUnpin for TryForEachConcurrent&lt;St, Fut, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut&gt; UnsafeUnpin for Once&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St1, St2&gt; UnsafeUnpin for Select&lt;St1, St2&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, F, Fut&gt; UnsafeUnpin for Unfold&lt;T, F, Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Si1, Si2&gt; UnsafeUnpin for Fanout&lt;Si1, Si2&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Si:&nbsp;Sink&lt;Item&gt;, Item, E&gt; UnsafeUnpin for SinkErrInto&lt;Si, Item, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Si, F&gt; UnsafeUnpin for SinkMapErr&lt;Si, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Si, Item, U, Fut, F&gt; UnsafeUnpin for With&lt;Si, Item, U, Fut, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Si, Item, U, St, F&gt; UnsafeUnpin for WithFlatMap&lt;Si, Item, U, St, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Si, Item&gt; UnsafeUnpin for Buffer&lt;Si, Item&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R&gt; UnsafeUnpin for BufReader&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;W&gt; UnsafeUnpin for BufWriter&lt;W&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, U&gt; UnsafeUnpin for Chain&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R, W:&nbsp;?Sized&gt; UnsafeUnpin for Copy&lt;'a, R, W&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R, W:&nbsp;?Sized&gt; UnsafeUnpin for CopyBuf&lt;'a, R, W&gt;","synthetic":false,"types":[]},{"text":"impl&lt;W, Item&gt; UnsafeUnpin for IntoSink&lt;W, Item&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R&gt; UnsafeUnpin for Lines&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R&gt; UnsafeUnpin for Take&lt;R&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()